name: Run Tests and Create PR/Issue

on:
  push:
    branches:
      - develop
      - 'feature/**'
      - 'fix/**'
      - 'hotfix/**'
  pull_request:
    branches:
      - main
      - develop
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.draft == false
    outputs:
      test_status: ${{ steps.run_tests.outputs.test_status }}
      test_command: ${{ steps.run_tests.outputs.test_command }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Load environment variables
        run: |
          if [ -f "./scripts/load-env-vars.js" ]; then
            node ./scripts/load-env-vars.js
          else
            echo "Environment variable loading script not found, continuing..."
          fi
        env:
          CI_CONTEXT: 'true' # Puedes usar esta variable en tu script si es necesario

      - name: Run tests
        id: run_tests
        run: |
          # Intentar el script de test más completo primero
          if npm run test:build --if-present; then
            echo "test_command=test:build" >> $GITHUB_OUTPUT
            echo "test_status=success" >> $GITHUB_OUTPUT
            npm run test:build
          elif npm run test:all-fixed --if-present; then
            echo "test_command=test:all-fixed" >> $GITHUB_OUTPUT
            echo "test_status=success" >> $GITHUB_OUTPUT
            npm run test:all-fixed
          elif npm test --if-present; then
            echo "test_command=test" >> $GITHUB_OUTPUT
            echo "test_status=success" >> $GITHUB_OUTPUT
            npm test
          else
            echo "No suitable test script found."
            echo "test_status=failure" >> $GITHUB_OUTPUT
            exit 1
          fi
        continue-on-error: true # Continuar para el paso de crear issue/PR

      - name: Set test failure status
        if: failure()
        run: |
          echo "test_status=failure" >> $GITHUB_OUTPUT

  create_pull_request:
    name: Create Pull Request
    needs: test
    runs-on: ubuntu-latest
    if: >
      needs.test.outputs.test_status == 'success' &&
      github.event_name == 'push' &&
      github.ref != 'refs/heads/main' &&
      (github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/feature/') || startsWith(github.ref, 'refs/heads/fix/') || startsWith(github.ref, 'refs/heads/hotfix/'))
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Setup labels
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Crear labels personalizados si no existen
          gh label create "automated-pr" --description "Pull request created automatically by workflow" --color "0366d6" 2>/dev/null || echo "Label automated-pr already exists or couldn't be created"
          gh label create "needs-review" --description "Requires review" --color "fbca04" 2>/dev/null || echo "Label needs-review already exists or couldn't be created"

      - name: Create Pull Request to main
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Verificar si ya existe un PR abierto desde esta rama hacia main
          existing_pr=$(gh pr list --head "${{ github.ref_name }}" --base main --json number --jq '.[0].number // empty')
          
          if [ -z "$existing_pr" ]; then
            # Crear nuevo PR (usar solo labels básicos para evitar errores)
            gh pr create \
              --title "Merge ${{ github.ref_name }} into main" \
              --body "Automated PR created after successful tests on branch \`${{ github.ref_name }}\`.

            Test command executed: \`${{ needs.test.outputs.test_command }}\`
            Workflow run: [${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}]" \
              --base main \
              --head "${{ github.ref_name }}" \
              --label "enhancement"
            
            echo "✅ Created new PR to main"
            
            # Intentar agregar labels personalizados después
            pr_number=$(gh pr list --head "${{ github.ref_name }}" --base main --json number --jq '.[0].number')
            gh pr edit "$pr_number" --add-label "automated-pr,needs-review" 2>/dev/null || echo "Could not add custom labels"
          else
            echo "ℹ️ PR #$existing_pr already exists for ${{ github.ref_name }} -> main"
          fi

      - name: Create Pull Request to develop (if branch is not develop itself)
        if: github.ref != 'refs/heads/develop'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Verificar si ya existe un PR abierto desde esta rama hacia develop
          existing_pr=$(gh pr list --head "${{ github.ref_name }}" --base develop --json number --jq '.[0].number // empty')
          
          if [ -z "$existing_pr" ]; then
            # Crear nuevo PR (usar label básico primero)
            gh pr create \
              --title "Merge ${{ github.ref_name }} into develop" \
              --body "Automated PR created after successful tests on branch \`${{ github.ref_name }}\`.

            Test command executed: \`${{ needs.test.outputs.test_command }}\`
            Workflow run: [${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}]" \
              --base develop \
              --head "${{ github.ref_name }}" \
              --label "enhancement"
            
            echo "✅ Created new PR to develop"
            
            # Intentar agregar labels personalizados después
            pr_number=$(gh pr list --head "${{ github.ref_name }}" --base develop --json number --jq '.[0].number')
            gh pr edit "$pr_number" --add-label "automated-pr,needs-review" 2>/dev/null || echo "Could not add custom labels"
          else
            echo "ℹ️ PR #$existing_pr already exists for ${{ github.ref_name }} -> develop"
          fi


  create_issue_on_failure:
    name: Create Issue on Failure
    needs: test
    runs-on: ubuntu-latest
    if: needs.test.outputs.test_status == 'failure' && github.event_name == 'push' && github.ref != 'refs/heads/main'
    steps:
      - name: Setup labels for issues
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Crear labels si no existen
          gh label create "automated-issue" --description "Issue created automatically by workflow" --color "0366d6" 2>/dev/null || echo "Label automated-issue already exists"
          gh label create "needs-attention" --description "Requires immediate attention" --color "d93f0b" 2>/dev/null || echo "Label needs-attention already exists"

      - name: Create Issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Crear issue por fallo en tests (usar labels básicos primero)
          issue_number=$(gh issue create \
            --title "🚨 Test Failure on branch: ${{ github.ref_name }}" \
            --body "### 🚨 Test Failure Notification 🚨

          Tests failed on branch **${{ github.ref_name }}**.

          - **Test Command Executed**: \`${{ needs.test.outputs.test_command }}\`
          - **Workflow Run**: [View Workflow Log](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

          Please investigate the failures and address them." \
            --label "bug" \
            --assignee "${{ github.actor }}" | sed 's/.*\/\([0-9]*\)/\1/')
          
          echo "✅ Created issue #$issue_number for test failure"
          
          # Intentar agregar labels personalizados después
          gh issue edit "$issue_number" --add-label "automated-issue,needs-attention" 2>/dev/null || echo "Could not add custom labels to issue"
