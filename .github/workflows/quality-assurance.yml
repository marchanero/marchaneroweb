name: Quality Assurance

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Ejecución programada dos veces por semana (lunes y jueves)
  schedule:
    - cron: '0 9 * * 1,4'
  # Permite ejecutar manualmente desde la pestaña Actions
  workflow_dispatch:

jobs:
  # Paso 1: Construir el sitio para validación
  build:
    name: Build para validación
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Instalar dependencias
        run: npm ci

      - name: Cargar variables de entorno
        run: node ./scripts/load-env-vars.js

      - name: Build del sitio
        run: npm run build
        
      - name: Subir el build para validación
        uses: actions/upload-artifact@v4
        with:
          name: site-build
          path: dist/
          retention-days: 1

  # Paso 2: Validación de HTML
  html-validation:
    name: HTML Validation
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Descargar build
        uses: actions/download-artifact@v4
        with:
          name: site-build
          path: dist

      - name: Instalar validador de HTML
        run: npm install -g html-validator-cli
          
      - name: Validar HTML
        run: |
          mkdir -p validation-results
          find dist -name "*.html" -exec sh -c 'html-validator --file "$1" > validation-results/$(basename "$1").validation.txt 2>&1 || echo "Error validating $1"' sh {} \;
          
      - name: Guardar resultados de validación HTML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: html-validation-results
          path: validation-results/

  # Paso 3: Validación de accesibilidad
  accessibility:
    name: Accessibility Check
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Instalar dependencias
        run: npm ci

      - name: Descargar build
        uses: actions/download-artifact@v4
        with:
          name: site-build
          path: dist

      - name: Ejecutar pruebas de accesibilidad
        run: |
          npm install --no-save serve
          npm run test:a11y
          
      - name: Generar reporte de accesibilidad
        if: always()
        run: |
          echo "## Reporte de accesibilidad" > accessibility-report.md
          echo "Fecha: $(date)" >> accessibility-report.md
          echo "### Resultados:" >> accessibility-report.md
          
          if [ -f ".pa11yci-results.json" ]; then
            echo "✅ Pruebas de accesibilidad completadas. Ver detalles en los artifacts." >> accessibility-report.md
          else
            echo "❌ Pruebas de accesibilidad fallidas o no generaron resultados." >> accessibility-report.md
          fi
          
      - name: Guardar reporte de accesibilidad
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-reports
          path: |
            accessibility-report.md
            .pa11yci-results.json
          
  # Paso 4: Validación de Schema.org
  schema-validation:
    name: Schema.org Validation
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Descargar build
        uses: actions/download-artifact@v4
        with:
          name: site-build
          path: dist
        
      - name: Instalar herramientas para Schema.org
        run: |
          npm install -g schema-validator structured-data-testing-tool
          
      - name: Validar Schema.org
        run: |
          mkdir -p schema-results
          
          # Extraer y validar esquemas JSON-LD
          find dist -name "*.html" -exec sh -c 'echo "Validating $1" && structured-data-testing-tool --file "$1" --schemas=jsonld > schema-results/$(basename "$1").schema.txt 2>&1 || echo "Error with $1"' sh {} \;
          
      - name: Guardar resultados de validación Schema.org
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: schema-validation-results
          path: schema-results/
          
  # Paso 5: Generar reporte final
  generate-report:
    name: Generar Reporte General
    runs-on: ubuntu-latest
    needs: [html-validation, accessibility, schema-validation]
    if: always()
    
    steps:
      - name: Descargar resultados HTML
        uses: actions/download-artifact@v4
        with:
          name: html-validation-results
          path: validation-results
          
      - name: Descargar resultados accesibilidad
        uses: actions/download-artifact@v4
        with:
          name: accessibility-reports
          path: accessibility-reports
          
      - name: Descargar resultados Schema.org
        uses: actions/download-artifact@v4
        with:
          name: schema-validation-results
          path: schema-results
          
      - name: Generar informe consolidado
        run: |
          echo "# Informe de Calidad - Web Dr. Roberto Sánchez Reolid" > qa-report.md
          echo "## Fecha: $(date)" >> qa-report.md
          echo "" >> qa-report.md
          
          echo "## 1. Validación HTML" >> qa-report.md
          echo "Archivos validados: $(find validation-results -type f | wc -l)" >> qa-report.md
          echo "" >> qa-report.md
          
          echo "## 2. Pruebas de Accesibilidad" >> qa-report.md
          if [ -f "accessibility-reports/accessibility-report.md" ]; then
            cat accessibility-reports/accessibility-report.md >> qa-report.md
          else
            echo "No se generó informe de accesibilidad" >> qa-report.md
          fi
          echo "" >> qa-report.md
          
          echo "## 3. Validación Schema.org" >> qa-report.md
          echo "Archivos validados: $(find schema-results -type f | wc -l)" >> qa-report.md
          
      - name: Guardar informe consolidado
        uses: actions/upload-artifact@v4
        with:
          name: qa-consolidated-report
          path: qa-report.md
