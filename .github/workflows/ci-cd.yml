name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Permite ejecutar manualmente desde la pestaña Actions
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Instalar dependencias
        run: npm ci

      - name: Verificar sintáxis y ejecutar tests
        run: |
          # Si tienes ESLint instalado, puedes descomentar esta línea
          # npm run lint
          
          # Comprobamos que el proyecto compila sin errores y pasa las pruebas
          npm run test:build

  build-and-deploy:
    name: Build y Deploy
    needs: test
    runs-on: ubuntu-latest
    # Solo ejecutamos el despliegue cuando se trata de la rama principal
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Instalar dependencias
        run: npm ci

      - name: Build del sitio
        run: npm run build

      - name: Deploy a Netlify
        uses: nwtgck/actions-netlify@v2
        with:
          publish-dir: './dist'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy desde GitHub Actions"
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 5
