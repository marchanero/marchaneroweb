---
// P√°gina de prueba para mostrar la integraci√≥n con Strapi Cloud
import Layout from '../layouts/Layout.astro';
import StrapiContent from '../components/StrapiContent.astro';
import { strapiAPI } from '../lib/strapi.js';
import type { StrapiProject, StrapiSiteInfo } from '../types/Strapi.ts';

// Obtener contenido de ejemplo de Strapi
let projects: StrapiProject[] = [];
let siteInfo: StrapiSiteInfo | null = null;
let strapiStatus = 'loading';

try {
  // Intentar obtener proyectos
  const projectsResponse = await strapiAPI.getProjects({
    populate: ['image'],
    pagination: { pageSize: 6 }
  });
  projects = projectsResponse.data || [];

  // Intentar obtener informaci√≥n del sitio
  siteInfo = await strapiAPI.getSiteInfo();
  
  strapiStatus = 'connected';
} catch (error) {
  console.error('Error connecting to Strapi:', error);
  strapiStatus = 'disconnected';
}
---

<Layout title="Prueba de Strapi Cloud - Dr. Roberto S√°nchez Reolid">
  <main class="min-h-screen bg-white dark:bg-gray-900">
    
    <!-- Header -->
    <header class="bg-gradient-to-r from-blue-600 to-purple-600 text-white py-12">
      <div class="max-w-6xl mx-auto px-4">
        <div class="text-center">
          <h1 class="text-4xl font-bold mb-4">
            üöÄ Integraci√≥n con Strapi Cloud
          </h1>
          <p class="text-xl text-blue-100 mb-6">
            P√°gina de prueba para contenido din√°mico
          </p>
          
          <!-- Estado de conexi√≥n -->
          <div class="inline-flex items-center bg-white/10 backdrop-blur-sm rounded-lg px-4 py-2">
            {strapiStatus === 'connected' && (
              <>
                <div class="w-3 h-3 bg-green-400 rounded-full mr-3 animate-pulse"></div>
                <span class="text-sm">‚úÖ Conectado a Strapi Cloud</span>
              </>
            )}
            {strapiStatus === 'disconnected' && (
              <>
                <div class="w-3 h-3 bg-red-400 rounded-full mr-3"></div>
                <span class="text-sm">‚ùå Sin conexi√≥n a Strapi Cloud</span>
              </>
            )}
            {strapiStatus === 'loading' && (
              <>
                <div class="w-3 h-3 bg-yellow-400 rounded-full mr-3 animate-spin"></div>
                <span class="text-sm">‚è≥ Conectando...</span>
              </>
            )}
          </div>
        </div>
      </div>
    </header>

    <!-- Contenido principal -->
    <div class="max-w-6xl mx-auto px-4 py-12">
      
      <!-- Informaci√≥n del sitio desde Strapi -->
      {siteInfo && (
        <section class="mb-12">
          <div class="bg-gradient-to-r from-green-50 to-blue-50 dark:from-green-900/20 dark:to-blue-900/20 rounded-2xl p-8 border border-green-200 dark:border-green-800">
            <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-4 flex items-center">
              <span class="mr-3">üìã</span>
              Informaci√≥n del Sitio desde Strapi
            </h2>
            <div class="grid md:grid-cols-2 gap-6">
              <div>
                <h3 class="font-semibold text-gray-800 dark:text-gray-200 mb-2">
                  {siteInfo.attributes.siteName || 'Nombre del Sitio'}
                </h3>
                <p class="text-gray-600 dark:text-gray-400 text-sm">
                  {siteInfo.attributes.siteDescription || 'Descripci√≥n del sitio'}
                </p>
              </div>
              <div>
                <h4 class="font-semibold text-gray-800 dark:text-gray-200 mb-2">Autor:</h4>
                <p class="text-gray-600 dark:text-gray-400 text-sm">
                  {siteInfo.attributes.authorName || 'Nombre del autor'} - {siteInfo.attributes.authorTitle || 'T√≠tulo'}
                </p>
                {siteInfo.attributes.email && (
                  <p class="text-blue-600 dark:text-blue-400 text-sm mt-1">
                    üìß {siteInfo.attributes.email}
                  </p>
                )}
              </div>
            </div>
          </div>
        </section>
      )}

      <!-- Art√≠culos din√°micos -->
      <section class="mb-12">
        <StrapiContent 
          limit={4} 
          showTitle={true} 
          title="üì∞ Art√≠culos desde Strapi Cloud"
        />
      </section>

      <!-- Proyectos desde Strapi -->
      <section class="mb-12">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-6 flex items-center">
          <span class="mr-3">üöÄ</span>
          Proyectos desde Strapi Cloud
        </h2>
        
        {projects.length > 0 ? (
          <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
            {projects.map((project, index) => (
              <div class={`bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 border border-gray-200/50 dark:border-gray-700/50 card-hover animate-fade-in-up`} style={`animation-delay: ${index * 0.1}s`}>
                <div class="flex items-center justify-between mb-4">
                  <h3 class="font-bold text-lg text-gray-900 dark:text-white">
                    {project.attributes.title}
                  </h3>
                  <span class={`px-3 py-1 rounded-full text-xs font-medium ${
                    project.attributes.status === 'completed' 
                      ? 'bg-green-100 text-green-700 dark:bg-green-900 dark:text-green-300'
                      : project.attributes.status === 'in_progress'
                      ? 'bg-blue-100 text-blue-700 dark:bg-blue-900 dark:text-blue-300'
                      : 'bg-gray-100 text-gray-700 dark:bg-gray-900 dark:text-gray-300'
                  }`}>
                    {project.attributes.status === 'completed' ? '‚úÖ Completado' :
                     project.attributes.status === 'in_progress' ? 'üîÑ En proceso' : 'üìÖ Planificado'}
                  </span>
                </div>
                
                <p class="text-gray-600 dark:text-gray-400 text-sm mb-4">
                  {project.attributes.description}
                </p>
                
                <div class="space-y-2 text-xs">
                  <div class="flex justify-between">
                    <span class="text-gray-500 dark:text-gray-500">Inicio:</span>
                    <span class="text-gray-700 dark:text-gray-300">
                      {new Date(project.attributes.startDate).toLocaleDateString('es-ES')}
                    </span>
                  </div>
                  {project.attributes.endDate && (
                    <div class="flex justify-between">
                      <span class="text-gray-500 dark:text-gray-500">Fin:</span>
                      <span class="text-gray-700 dark:text-gray-300">
                        {new Date(project.attributes.endDate).toLocaleDateString('es-ES')}
                      </span>
                    </div>
                  )}
                  {project.attributes.budget && (
                    <div class="flex justify-between">
                      <span class="text-gray-500 dark:text-gray-500">Presupuesto:</span>
                      <span class="text-gray-700 dark:text-gray-300 font-medium">
                        {project.attributes.budget.toLocaleString()}‚Ç¨
                      </span>
                    </div>
                  )}
                </div>
                
                {project.attributes.progress !== undefined && (
                  <div class="mt-4">
                    <div class="flex justify-between text-xs mb-1">
                      <span class="text-gray-500 dark:text-gray-500">Progreso</span>
                      <span class="text-blue-600 dark:text-blue-400 font-medium">
                        {project.attributes.progress}%
                      </span>
                    </div>
                    <div class="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2">
                      <div 
                        class="bg-gradient-to-r from-blue-500 to-purple-600 h-2 rounded-full transition-all duration-1000"
                        style={`width: ${project.attributes.progress}%`}
                      ></div>
                    </div>
                  </div>
                )}
                
                {project.attributes.technologies && project.attributes.technologies.length > 0 && (
                  <div class="mt-4">
                    <div class="flex flex-wrap gap-1">
                      {project.attributes.technologies.slice(0, 3).map(tech => (
                        <span class="bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300 px-2 py-1 rounded text-xs">
                          {tech}
                        </span>
                      ))}
                    </div>
                  </div>
                )}
              </div>
            ))}
          </div>
        ) : (
          <div class="bg-gray-50 dark:bg-gray-800 rounded-lg p-8 text-center">
            <div class="text-gray-400 dark:text-gray-500">
              <svg class="w-16 h-16 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
              </svg>
              <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-2">
                No hay proyectos disponibles
              </h3>
              <p class="text-gray-600 dark:text-gray-400">
                Los proyectos aparecer√°n aqu√≠ una vez que se configuren en Strapi Cloud
              </p>
            </div>
          </div>
        )}
      </section>

      <!-- Instrucciones de configuraci√≥n -->
      <section class="mb-12">
        <div class="bg-gradient-to-r from-yellow-50 to-orange-50 dark:from-yellow-900/20 dark:to-orange-900/20 rounded-2xl p-8 border border-yellow-200 dark:border-yellow-800">
          <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-6 flex items-center">
            <span class="mr-3">‚öôÔ∏è</span>
            Configuraci√≥n de Strapi Cloud
          </h2>
          
          <div class="space-y-4">
            <div class="bg-white dark:bg-gray-800 rounded-lg p-4">
              <h3 class="font-semibold text-gray-800 dark:text-gray-200 mb-2">
                1. Configura las variables de entorno
              </h3>
              <p class="text-gray-600 dark:text-gray-400 text-sm mb-2">
                Crea un archivo <code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">.env</code> 
                basado en <code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">.env.example</code>:
              </p>
              <pre class="bg-gray-100 dark:bg-gray-700 p-3 rounded text-xs overflow-x-auto">
<code>PUBLIC_STRAPI_URL=https://tu-proyecto.strapiapp.com
STRAPI_API_TOKEN=tu_token_de_api_aqui</code>
              </pre>
            </div>
            
            <div class="bg-white dark:bg-gray-800 rounded-lg p-4">
              <h3 class="font-semibold text-gray-800 dark:text-gray-200 mb-2">
                2. Crea los Content Types en Strapi
              </h3>
              <p class="text-gray-600 dark:text-gray-400 text-sm">
                En tu panel de Strapi Cloud, crea los siguientes Content Types:
              </p>
              <ul class="text-xs text-gray-500 dark:text-gray-500 mt-2 space-y-1">
                <li>‚Ä¢ <strong>Article:</strong> title, slug, content, excerpt, image, tags</li>
                <li>‚Ä¢ <strong>Project:</strong> title, slug, description, status, budget, progress</li>
                <li>‚Ä¢ <strong>Site Info:</strong> siteName, siteDescription, authorName, authorTitle</li>
              </ul>
            </div>
            
            <div class="bg-white dark:bg-gray-800 rounded-lg p-4">
              <h3 class="font-semibold text-gray-800 dark:text-gray-200 mb-2">
                3. Obt√©n el token de API
              </h3>
              <p class="text-gray-600 dark:text-gray-400 text-sm">
                Ve a Settings > API Tokens en tu panel de Strapi y crea un token con permisos de lectura.
              </p>
            </div>
          </div>
        </div>
      </section>
    </div>
  </main>
</Layout>

<style>
  .card-hover {
    transition: all 0.3s ease;
  }
  
  .card-hover:hover {
    transform: translateY(-4px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }
  
  .dark .card-hover:hover {
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
  }
</style>
