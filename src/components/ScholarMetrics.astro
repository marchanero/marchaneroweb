---
// Componente para mostrar m√©tricas bibliom√©tricas din√°micas y adaptativas
import scholarData from '../data/scholar.json';

interface Props {
  showDetails?: boolean;
  compact?: boolean;
}

const { showDetails = false, compact = false } = Astro.props;

// Funci√≥n para formatear n√∫meros grandes con mejor escalado
function formatNumber(num: number): string {
  if (num >= 1000000) {
    return (num / 1000000).toFixed(1) + 'M';
  }
  if (num >= 1000) {
    return (num / 1000).toFixed(1) + 'k';
  }
  return num.toString();
}

// Funci√≥n para detectar tendencias de crecimiento
function calculateGrowthTrend(data: number[]): { trend: 'up' | 'down' | 'stable', percentage: number } {
  if (data.length < 2) return { trend: 'stable', percentage: 0 };
  
  const recent = data.slice(-3); // √öltimos 3 a√±os
  const earlier = data.slice(0, -3).length > 0 ? data.slice(0, -3) : [0];
  
  const recentAvg = recent.reduce((a, b) => a + b, 0) / recent.length;
  const earlierAvg = earlier.reduce((a, b) => a + b, 0) / earlier.length;
  
  if (earlierAvg === 0 && recentAvg > 0) return { trend: 'up', percentage: 100 };
  if (earlierAvg === 0) return { trend: 'stable', percentage: 0 };
  
  const percentage = ((recentAvg - earlierAvg) / earlierAvg) * 100;
  
  if (percentage > 10) return { trend: 'up', percentage: Math.round(percentage) };
  if (percentage < -10) return { trend: 'down', percentage: Math.round(Math.abs(percentage)) };
  return { trend: 'stable', percentage: Math.round(Math.abs(percentage)) };
}

// Calcular m√©tricas usando los datos disponibles
const years = scholarData.publications
  .map(pub => pub.year)
  .filter((year): year is number => year !== null && year !== undefined && typeof year === 'number' && !isNaN(year));

const minYear = Math.min(...years);
const maxYear = Math.max(...years);
const careerSpan = maxYear - minYear + 1;

const avgPublicationsPerYear = Math.round(scholarData.publications.length / careerSpan) || 0;
const avgCitationsPerPaper = Math.round(scholarData.metrics.totalCitations / scholarData.publications.length) || 0;

// Calcular publicaciones por a√±o
const publicationsByYear: Record<string, number> = {};
scholarData.publications.forEach(pub => {
  if (pub.year) {
    const year = pub.year.toString();
    publicationsByYear[year] = (publicationsByYear[year] || 0) + 1;
  }
});

// Preparar datos para la gr√°fica de progreso con escalado din√°mico
const yearRange = Array.from({length: careerSpan}, (_, i) => minYear + i);
const yearData = yearRange.map(year => ({
  year,
  publications: publicationsByYear[year.toString()] || 0
}));

const maxPublications = Math.max(...Object.values(publicationsByYear), 1);
const peakPublicationYear = Object.keys(publicationsByYear).find(year => 
  publicationsByYear[year] === maxPublications
);

// Calcular citas por a√±o con datos reales
const citationsByYear: Record<string, number> = {};
scholarData.publications.forEach(pub => {
  if (pub.year && pub.citedBy) {
    const year = pub.year.toString();
    citationsByYear[year] = (citationsByYear[year] || 0) + pub.citedBy;
  }
});

const citationData = yearRange.map(year => ({
  year,
  citations: citationsByYear[year.toString()] || 0
}));

const maxCitations = Math.max(...Object.values(citationsByYear), 1);

// Calcular tendencias de crecimiento
const publicationTrend = calculateGrowthTrend(yearData.map(d => d.publications));
const citationTrend = calculateGrowthTrend(citationData.map(d => d.citations));

// Determinar el nivel de actividad para escalar din√°micamente
const activityLevel = (() => {
  const totalPubs = scholarData.publications.length;
  const totalCites = scholarData.metrics.totalCitations;
  
  if (totalPubs >= 100 && totalCites >= 1000) return 'alta';
  if (totalPubs >= 50 && totalCites >= 500) return 'media-alta';
  if (totalPubs >= 20 && totalCites >= 100) return 'media';
  return 'emergente';
})();

// Configuraci√≥n din√°mica de escalas basada en el nivel de actividad
const chartConfig = {
  'alta': { minBarHeight: 12, maxBarHeight: 80, gridLines: 5 },
  'media-alta': { minBarHeight: 10, maxBarHeight: 70, gridLines: 4 },
  'media': { minBarHeight: 8, maxBarHeight: 60, gridLines: 3 },
  'emergente': { minBarHeight: 6, maxBarHeight: 50, gridLines: 3 }
}[activityLevel];
---

<style>
  /* Animaciones sutiles y elegantes */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes subtleGlow {
    0%, 100% { box-shadow: 0 0 10px rgba(59, 130, 246, 0.1); }
    50% { box-shadow: 0 0 20px rgba(59, 130, 246, 0.2); }
  }
  
  .fade-in-up {
    animation: fadeInUp 0.6s ease-out forwards;
  }
  
  .metric-card {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .metric-card:hover {
    transform: translateY(-2px);
    animation: subtleGlow 2s ease-in-out infinite;
  }
  
  .chart-bar {
    transition: all 0.3s ease;
  }
  
  .chart-bar:hover {
    transform: scaleY(1.05);
    filter: brightness(1.1);
  }
  
  /* Indicador de estado m√°s sutil */
  .status-indicator {
    animation: pulse 2s ease-in-out infinite;
  }
  
  @keyframes pulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.5; }
  }
  
  /* Mejora de accesibilidad */
  @media (prefers-reduced-motion: reduce) {
    *, *::before, *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }
</style>

<div class={`${compact ? 'p-6' : 'p-8'} bg-white/70 dark:bg-gray-800/70 backdrop-blur-sm rounded-2xl shadow-lg border border-gray-200/50 dark:border-gray-700/50 hover:shadow-xl transition-all duration-300 flex flex-col h-full`}>
  
  <div class="flex items-center justify-between mb-6">
    <div class="flex items-center space-x-3">
      <div class="w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-xl flex items-center justify-center shadow-lg">
        <span class="text-white text-xl">üìä</span>
      </div>
      <div>
        <h3 class="text-lg font-bold text-gray-900 dark:text-white">
          M√©tricas Bibliom√©tricas
        </h3>
        <div class="w-12 h-0.5 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full"></div>
      </div>
    </div>
    
    <div class="flex items-center space-x-2 text-xs text-emerald-600 dark:text-emerald-400">
      <div class="w-2 h-2 bg-emerald-500 rounded-full status-indicator"></div>
      <span class="font-medium">En vivo</span>
    </div>
  </div>
  
  <!-- M√©tricas principales simplificadas -->
  <div class={`grid ${compact ? 'grid-cols-1 gap-4' : 'grid-cols-3 gap-6'} mb-6 flex-grow`}>
    <div class="metric-card fade-in-up bg-gradient-to-br from-blue-50 to-blue-100 dark:from-blue-900/20 dark:to-blue-800/20 rounded-xl p-4 border border-blue-200/50 dark:border-blue-700/30">
      <div class="flex items-center justify-between">
        <div>
          <div class="text-2xl font-bold text-blue-600 dark:text-blue-400">
            {formatNumber(scholarData.metrics.totalCitations)}
          </div>
          <div class="text-sm text-gray-600 dark:text-gray-400 font-medium">Citas Totales</div>
          {citationTrend.trend !== 'stable' && (
            <div class={`text-xs mt-1 flex items-center space-x-1 ${
              citationTrend.trend === 'up' ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'
            }`}>
              <span>{citationTrend.trend === 'up' ? '‚ÜóÔ∏è' : '‚ÜòÔ∏è'}</span>
              <span>{citationTrend.percentage}%</span>
            </div>
          )}
        </div>
        <div class="text-3xl opacity-20">üìà</div>
      </div>
    </div>
    
    <div class="metric-card fade-in-up bg-gradient-to-br from-emerald-50 to-emerald-100 dark:from-emerald-900/20 dark:to-emerald-800/20 rounded-xl p-4 border border-emerald-200/50 dark:border-emerald-700/30" style="animation-delay: 0.1s;">
      <div class="flex items-center justify-between">
        <div>
          <div class="text-2xl font-bold text-emerald-600 dark:text-emerald-400">
            {scholarData.metrics.hIndex}
          </div>
          <div class="text-sm text-gray-600 dark:text-gray-400 font-medium">√çndice h</div>
          {showDetails && (
            <div class="text-xs text-gray-500 dark:text-gray-500 mt-1">
              {scholarData.metrics.hIndexRecent} (5 a√±os)
            </div>
          )}
        </div>
        <div class="text-3xl opacity-20">üèÜ</div>
      </div>
    </div>
    
    <div class="metric-card fade-in-up bg-gradient-to-br from-purple-50 to-purple-100 dark:from-purple-900/20 dark:to-purple-800/20 rounded-xl p-4 border border-purple-200/50 dark:border-purple-700/30" style="animation-delay: 0.2s;">
      <div class="flex items-center justify-between">
        <div>
          <div class="text-2xl font-bold text-purple-600 dark:text-purple-400">
            {scholarData.metrics.i10Index}
          </div>
          <div class="text-sm text-gray-600 dark:text-gray-400 font-medium">√çndice i10</div>
          {showDetails && (
            <div class="text-xs text-gray-500 dark:text-gray-500 mt-1">
              {scholarData.metrics.i10IndexRecent} (5 a√±os)
            </div>
          )}
        </div>
        <div class="text-3xl opacity-20">‚≠ê</div>
      </div>
    </div>
  </div>
  
  <!-- Gr√°ficas simplificadas solo en modo no compacto -->
  {!compact && (
    <div class="mt-8 p-4 bg-gray-50 dark:bg-gray-700/30 rounded-xl flex-grow">
      <h4 class="text-base font-semibold text-gray-900 dark:text-white mb-4 flex items-center">
        <span class="mr-2">üìà</span> 
        Evoluci√≥n Temporal ({minYear} - {maxYear})
      </h4>
      
      <!-- Gr√°fica de publicaciones simplificada -->
      <div class="mb-6">
        <h5 class="text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">
          üìö Publicaciones por A√±o
        </h5>
        
        <div class="flex items-end space-x-1 h-24 bg-white dark:bg-gray-800 rounded-lg p-3 border border-gray-200 dark:border-gray-600">
          {yearData.map(({ year, publications }, index) => {
            const height = maxPublications > 0 
              ? Math.max((publications / maxPublications) * 60, publications > 0 ? 4 : 1)
              : 1;
            
            const isRecentYear = year >= maxYear - 2;
            const isPeakYear = publications === maxPublications && publications > 0;
            
            return (
              <div class="flex-1 flex flex-col items-center group">
                <div 
                  class={`w-full chart-bar rounded-t cursor-pointer ${
                    isPeakYear 
                      ? 'bg-gradient-to-t from-blue-600 to-blue-400 shadow-lg' 
                      : isRecentYear 
                        ? 'bg-gradient-to-t from-blue-500 to-blue-300'
                        : 'bg-gradient-to-t from-blue-400 to-blue-200 hover:from-blue-500 hover:to-blue-300'
                  }`}
                  style={`height: ${height}px`}
                  title={`${year}: ${publications} publicaciones`}
                />
                <span class="text-xs mt-2 text-gray-600 dark:text-gray-400 font-medium">
                  '{year.toString().slice(-2)}
                </span>
              </div>
            );
          })}
        </div>
        
        <div class="text-xs text-gray-500 dark:text-gray-400 mt-3 text-center">
          M√°ximo: <strong>{maxPublications}</strong> en <strong>{peakPublicationYear}</strong> ‚Ä¢ 
          Total: <strong>{scholarData.publications.length}</strong> publicaciones
        </div>
      </div>
    </div>
  )}
  
  <div class="mt-auto pt-4 border-t border-gray-200 dark:border-gray-600 text-center">
    <div class="text-xs text-gray-500 dark:text-gray-400">
      <span class="font-medium">√öltima actualizaci√≥n:</span> {new Date(scholarData.lastUpdated).toLocaleDateString('es-ES', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
      })}
    </div>
  </div>
</div>
